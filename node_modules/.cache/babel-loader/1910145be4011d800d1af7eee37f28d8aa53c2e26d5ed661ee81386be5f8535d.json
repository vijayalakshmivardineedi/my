{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\my\\\\src\\\\components\\\\MediaCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaCarousel = ({\n  mediaSrcs = []\n}) => {\n  _s();\n  const [currentMediaIndex, setCurrentMediaIndex] = useState(0);\n  const [paused, setPaused] = useState(false);\n  const mediaRef = useRef(null);\n  useEffect(() => {\n    if (mediaSrcs.length === 0) return;\n    const handleEnded = () => {\n      setCurrentMediaIndex(prevIndex => (prevIndex + 1) % mediaSrcs.length);\n      setPaused(true);\n    };\n    const mediaElement = mediaRef.current;\n    if (mediaElement) {\n      if (mediaElement.tagName === 'VIDEO') {\n        mediaElement.addEventListener('ended', handleEnded);\n      } else {\n        const imageDuration = 3000; // 3 seconds for images\n        const timer = setTimeout(handleEnded, imageDuration);\n        return () => clearTimeout(timer);\n      }\n      return () => {\n        if (mediaElement.tagName === 'VIDEO') {\n          mediaElement.removeEventListener('ended', handleEnded);\n        }\n      };\n    }\n  }, [currentMediaIndex, mediaSrcs]);\n  const togglePlayPause = () => {\n    const mediaElement = mediaRef.current;\n    if (mediaElement) {\n      if (paused) {\n        mediaElement.play();\n      } else {\n        mediaElement.pause();\n      }\n      setPaused(!paused);\n    }\n  };\n  if (mediaSrcs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No media available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  const isVideo = mediaSrcs[currentMediaIndex].endsWith('.mp4');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: isVideo ? /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: mediaRef,\n      src: mediaSrcs[currentMediaIndex],\n      controls: true,\n      autoPlay: true,\n      className: \"video\",\n      onClick: togglePlayPause\n    }, mediaSrcs[currentMediaIndex], false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: mediaRef,\n      src: mediaSrcs[currentMediaIndex],\n      alt: `media-${currentMediaIndex}`,\n      className: \"video\"\n    }, mediaSrcs[currentMediaIndex], false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaCarousel, \"mtUzq4Z+jhItPRjpYGLOO4c4VUk=\");\n_c = MediaCarousel;\nexport default MediaCarousel;\nvar _c;\n$RefreshReg$(_c, \"MediaCarousel\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","MediaCarousel","mediaSrcs","_s","currentMediaIndex","setCurrentMediaIndex","paused","setPaused","mediaRef","length","handleEnded","prevIndex","mediaElement","current","tagName","addEventListener","imageDuration","timer","setTimeout","clearTimeout","removeEventListener","togglePlayPause","play","pause","children","fileName","_jsxFileName","lineNumber","columnNumber","isVideo","endsWith","className","ref","src","controls","autoPlay","onClick","alt","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/my/src/components/MediaCarousel.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport './Home.css';\r\n\r\nconst MediaCarousel = ({ mediaSrcs = [] }) => {\r\n    const [currentMediaIndex, setCurrentMediaIndex] = useState(0);\r\n    const [paused, setPaused] = useState(false);\r\n    const mediaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (mediaSrcs.length === 0) return;\r\n\r\n        const handleEnded = () => {\r\n            setCurrentMediaIndex((prevIndex) => (prevIndex + 1) % mediaSrcs.length);\r\n            setPaused(true);\r\n        };\r\n\r\n        const mediaElement = mediaRef.current;\r\n        if (mediaElement) {\r\n            if (mediaElement.tagName === 'VIDEO') {\r\n                mediaElement.addEventListener('ended', handleEnded);\r\n            } else {\r\n                const imageDuration = 3000; // 3 seconds for images\r\n                const timer = setTimeout(handleEnded, imageDuration);\r\n                return () => clearTimeout(timer);\r\n            }\r\n            return () => {\r\n                if (mediaElement.tagName === 'VIDEO') {\r\n                    mediaElement.removeEventListener('ended', handleEnded);\r\n                }\r\n            };\r\n        }\r\n    }, [currentMediaIndex, mediaSrcs]);\r\n\r\n    const togglePlayPause = () => {\r\n        const mediaElement = mediaRef.current;\r\n        if (mediaElement) {\r\n            if (paused) {\r\n                mediaElement.play();\r\n            } else {\r\n                mediaElement.pause();\r\n            }\r\n            setPaused(!paused);\r\n        }\r\n    };\r\n\r\n    if (mediaSrcs.length === 0) {\r\n        return <div>No media available</div>;\r\n    }\r\n\r\n    const isVideo = mediaSrcs[currentMediaIndex].endsWith('.mp4');\r\n\r\n    return (\r\n        <div className=\"video-container\">\r\n            {isVideo ? (\r\n                <video\r\n                    ref={mediaRef}\r\n                    key={mediaSrcs[currentMediaIndex]}\r\n                    src={mediaSrcs[currentMediaIndex]}\r\n                    controls\r\n                    autoPlay\r\n                    className='video'\r\n                    onClick={togglePlayPause}\r\n                />\r\n            ) : (\r\n                <img\r\n                    ref={mediaRef}\r\n                    key={mediaSrcs[currentMediaIndex]}\r\n                    src={mediaSrcs[currentMediaIndex]}\r\n                    alt={`media-${currentMediaIndex}`}\r\n                    className='video'\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MediaCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}